version: "3.9"
services:
  proxy:
    image: nginx:stable
    restart: always
    volumes:
      - ./proxy/nginxconfig.io:/etc/nginx/nginxconfig.io
      - ./proxy/internal:/etc/nginx/internal
      - ./proxy/conf.d:/etc/nginx/conf.d
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/ssl:/etc/nginx/ssl
      - ./public:/public
      - ./storage/app/recordings:/public/recordings
      - ./internal/startup:/internal/startup:ro
    ports:
      - ${EXTERNAL_WEB_HTTP_PORT:-80}:80
      - ${EXTERNAL_WEB_HTTPS_PORT:-443}:443
      - ${EXTERNAL_WEB_SOCKET_PORT:-6001}:6001
    depends_on:
      - web
      - ws-server
    deploy:
      resources:
         limits:
           memory: 64M
  web:
    build: .
    restart: always
    privileged: true
    environment:
      - ROLE=server
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
      - mongo
      - bundler
      # - mariadb
  scheduler:
    build: .
    restart: always
    privileged: true
    environment:
      - ROLE=scheduler
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  # short-scheduler:
  #   build: .
  #   restart: always
  #   privileged: true
  #   environment:
  #     - ROLE=scheduler
  #     - KIND=short
  #   volumes:
  #     - .:/var/www
  #     - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
  #     - /dev/bus/usb:/dev/bus/usb
  #     - /dev:/dev
  #   depends_on:
  #     - redis
  #     - mongo
  #     # - mariadb
  serial-scheduler:
    build: .
    restart: always
    privileged: true
    environment:
      - ROLE=serial-scheduler
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  mapper:
    build: .
    restart: always
    privileged: true
    environment:
      - ROLE=mapper
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
      - /sys/class:/sys/class
      - /sys/devices:/sys/devices
      - /run/udev:/run/udev:ro
    depends_on:
      - redis
      - mongo
      # - mariadb
  queue:
    build: .
    restart: always
    privileged: true
    environment:
      - ROLE=queue
      - UPLOAD_LIMIT=1G
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  prints-queue:
    build: .
    restart: always
    privileged: true
    environment:
      - ROLE=queue
      - QUEUE=prints
      - PARALLEL_JOBS_PER_THREAD=2
      - UPLOAD_LIMIT=1G
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  control-queue:
    build: .
    restart: always
    privileged: true
    environment:
      - ROLE=queue
      - QUEUE=control
      - PARALLEL_JOBS_PER_THREAD=1
      - UPLOAD_LIMIT=1G
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  previews-queue:
    build: .
    restart: always
    environment:
      - ROLE=queue
      - QUEUE=previews
      - UPLOAD_LIMIT=1G
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
    depends_on:
      - redis
      - mongo
      # - mariadb
  broadcasts-queue:
    build: .
    restart: always
    environment:
      - ROLE=queue
      - QUEUE=broadcasts
      - UPLOAD_LIMIT=1G
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  snapshots-queue:
    build: .
    restart: always
    environment:
      - ROLE=queue
      - QUEUE=snapshots
      - SLEEP=0.25
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  recordings-queue:
    build: .
    restart: always
    environment:
      - ROLE=queue
      - QUEUE=recordings
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
    depends_on:
      - redis
      - mongo
      # - mariadb
  ws-server:
    build: .
    restart: always
    environment:
      - ROLE=ws-server
    volumes:
      - .:/var/www
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
      - mongo
      # - mariadb
  bundler:
    build: .
    restart: always
    environment:
      - ROLE=bundler
    volumes:
      - .:/var/www
  streamer:
    build: .
    restart: always
    environment:
      - ROLE=streamer
      - PORT_SCAN_START=60000
      - PORT_SCAN_END=60016
    privileged: true
    volumes:
      - .:/var/www
      - ./internal/limits.ini:/usr/local/etc/php/conf.d/limits.ini:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev:/dev
      - /sys/class:/sys/class
      - /sys/devices:/sys/devices
      - /run/udev:/run/udev:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
      - mongo
      - bundler
      - proxy
      # - mariadb
      - mapper
  redis:
    image: redis
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: redis-server --save "" --appendonly no
  mongo:
    image: mongo:4.4.6
    restart: always
    command: mongod --quiet
    volumes:
      - mongo:/data/db
  memcached:
    image: memcached
    restart: always
  documentation-generator:
    build: .
    environment:
      - ROLE=documentation-generator
    volumes:
      - .:/var/www
    ports:
      - 30000:30000
volumes:
  mongo: